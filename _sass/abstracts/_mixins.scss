// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------

/// Event wrapper
/// @author Harry Roberts
/// @param {Bool} $self [false] - Whether or not to include current selector
/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
@mixin on-event($self: false) {
  @if $self {
    &,
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  } @else {
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  }
}

/// Make a context based selector a little more friendly
/// @author Hugo Giraudel
/// @param {String} $context
@mixin when-inside($context) {
  #{$context} & {
    @content;
  }
}

/// https://css-tricks.com/snippets/sass/maintain-aspect-ratio-mixin/
@mixin aspect-ratio($width, $height) {
  position: relative;
  
  &:before {
    display: block;
    content: "";
    width: 100%;
    padding-top: ($height / $width) * 100%;
  }

  > .content {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
}


//breakpoints
/// Mixin to manage responsive breakpoints
/// @author Hugo Giraudel
/// @param {String} $breakpoint - Breakpoint name
/// @require $breakpoints
@mixin respond-to($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media #{inspect(map-get($breakpoints, $breakpoint))} {
      @content;
    }
  }
 
  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}



// typography, using mixins so the styles can be called within media queries â€“ please refer to base/typography 


@mixin in-depth_left {
  float: left;
  width: 16%;
  margin-top: 7px;
}


@mixin border-styles {
  border-width: 2px;
  border-style: solid;
}

@mixin light-fill {
  @include border-styles;
  border-color: $colour_M4C-wireframe-dark;
  color: $colour_M4C-wireframe-dark;
  background-color: white; 
}



// Basic typography styles
// headlines
@mixin font-size-1 {
  font-size: 50pt;
  line-height: 1;
}



// quote blocks, audio player, section titles,
@mixin font-size-2 {
  // font-size: 22pt;
  // line-height: 1.5;
  font-size: 18pt;
  line-height: 1.25;
}



// body copy and primary nav links
@mixin font-size-3 {
  // font-size: 16pt;
  font-size: 14pt;
  line-height: 1.3;
}



// secondary nav links, folio-title
@mixin font-size-4 {
  // font-size: 13pt;
  font-size: 12pt;
  line-height: 1.15;
}



// small stuff, album name
@mixin font-size-5 {
  font-size: 09pt;
  // todo
  // line-height: ;
}



@mixin hyperlink {
    border-bottom: 1px solid;
    padding-bottom: .125rem;
    text-decoration: none;
}